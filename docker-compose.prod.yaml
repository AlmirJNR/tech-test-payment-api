version: "3.9"

volumes:
  homologation-database:
    driver: "local"
  production-database:
    driver: "local"
  production-api:
    driver: "local"

networks:
  homologation:
    driver: "bridge"
  production:
    driver: "bridge"

services:
  homologation-database:
    build:
      context: ./Assets
      dockerfile: Database.Dockerfile
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d ecommerce" ]
      interval: 3s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin-password
    restart: unless-stopped
    volumes:
      - homologation-database:/var/lib/postgresql/data

  production-database:
    build:
      context: ./Assets
      dockerfile: Database.Dockerfile
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d ecommerce" ]
      interval: 3s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin-password
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - production-database:/var/lib/postgresql/data
    networks:
      - production

  api:
    build:
      context: .
      dockerfile: ./Assets/Api.Dockerfile
    environment:
      HOMOLOGATION_DATABASE_CONNECTION_STRING: "Server=homologation-database;Port=5432;Database=ecommerce;User Id=admin;Password=admin-password;"
      DATABASE_CONNECTION_STRING: "Server=production-database;Port=5432;Database=ecommerce;User Id=admin;Password=admin-password;"
      JWT_SUBJECT: "ECOMMERCE_SUBJECT"
      JWT_ISSUER: "ECOMMERCE_ISSUER"
      JWT_AUDIENCE: "ECOMMERCE_BACKEND"
      JWT_KEY: "9a5835502c69a59d42d5438316d3d43cd2fb0bdd789b3de98f1d0d58e25dbaa5"
    ports:
      - "5182:80"
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - production-api:/Api
    networks:
      - production